AWSTemplateFormatVersion: '2010-09-09'
Description: AWS infrastructure for a secure mini network.

Parameters:
  MyKeyPair:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances.
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: 'cloudformation'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  MyIP:
    Description: The IP address range that can be used to SSH to the EC2 instances.
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: '83.137.6.163/32'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.

Resources:
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet

  PrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PrivateSubnet

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: MyInternetGateway

  GatewayToInternet:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  DefaultPublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: InternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: PrivateRouteTable

  PrivateSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  NATGatewayEIP:
    Type: 'AWS::EC2::EIP'
    DependsOn: InternetGateway
    Properties:
      Domain: vpc

  NATGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt NATGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: MyNATGateway

  DefaultPrivateRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: NATGateway
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

  JumpBoxSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref MyIP

  PrivateSecurityGroup1:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          SourceSecurityGroupId: !Ref JumpBoxSecurityGroup

  PrivateSecurityGroup2:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          SourceSecurityGroupId: !Ref JumpBoxSecurityGroup

  PublicSecurityGroup1:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          SourceSecurityGroupId: !Ref JumpBoxSecurityGroup

  PublicSecurityGroup2:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          SourceSecurityGroupId: !Ref JumpBoxSecurityGroup

  JumpBoxInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref MyKeyPair
      ImageId: ami-089c26792dcb1fbd4
      NetworkInterfaces:
        - SubnetId: !Ref PublicSubnet
          DeviceIndex: '0'
          AssociatePublicIpAddress: true
          GroupSet:
            - !Ref JumpBoxSecurityGroup
      Tags:
        - Key: Name
          Value: JumpBox

  PrivateInstance1:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref MyKeyPair
      ImageId: ami-089c26792dcb1fbd4
      NetworkInterfaces:
        - SubnetId: !Ref PrivateSubnet
          DeviceIndex: '0'
          AssociatePublicIpAddress: false
          GroupSet:
            - !Ref PrivateSecurityGroup1
      Tags:
        - Key: Name
          Value: First_PrivateInstance

  PrivateInstance2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref MyKeyPair
      ImageId: ami-089c26792dcb1fbd4
      NetworkInterfaces:
        - SubnetId: !Ref PrivateSubnet
          DeviceIndex: '0'
          AssociatePublicIpAddress: false
          GroupSet:
            - !Ref PrivateSecurityGroup2
      Tags:
        - Key: Name
          Value: Second_PrivateInstance

  PublicInstance1:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref MyKeyPair
      ImageId: ami-089c26792dcb1fbd4
      NetworkInterfaces:
        - SubnetId: !Ref PublicSubnet
          DeviceIndex: '0'
          AssociatePublicIpAddress: true
          GroupSet:
            - !Ref PublicSecurityGroup1
      Tags:
        - Key: Name
          Value:  First_PublicInstance 
  PublicInstance2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref MyKeyPair
      ImageId: ami-089c26792dcb1fbd4
      NetworkInterfaces:
        - SubnetId: !Ref PublicSubnet
          DeviceIndex: '0'
          AssociatePublicIpAddress: true
          GroupSet:
            - !Ref PublicSecurityGroup2
      Tags:
        - Key: Name
          Value: Second_PublicInstance      
Outputs:
  JumpBoxPublicIP:
    Description: Public IP address of the jump box
    Value: !GetAtt JumpBoxInstance.PublicIp
